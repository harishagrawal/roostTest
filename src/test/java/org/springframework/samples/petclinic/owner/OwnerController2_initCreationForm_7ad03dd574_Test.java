// Test generated by RoostGPT for test RoostTest using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import java.util.HashMap;
import java.util.Map;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class OwnerController2_initCreationForm_7ad03dd574_Test {

    private OwnerController ownerController;
    private Map<String, Object> model;

    @BeforeEach
    public void setup() {
        ownerController = new OwnerController();
        model = new HashMap<>();
    }

    @Test
    public void testInitCreationForm() {
        String viewName = ownerController.initCreationForm(model);
        assertEquals("VIEWS_OWNER_CREATE_OR_UPDATE_FORM", viewName, "View name returned is not as expected");
        assertTrue(model.containsKey("owner"), "Model does not contain attribute 'owner'");
        assertTrue(model.get("owner") instanceof Owner, "Attribute 'owner' is not of type Owner");
    }

    @Test
    public void testInitCreationFormWithExistingModel() {
        model.put("owner", new Owner());
        String viewName = ownerController.initCreationForm(model);
        assertEquals("VIEWS_OWNER_CREATE_OR_UPDATE_FORM", viewName, "View name returned is not as expected");
        assertTrue(model.containsKey("owner"), "Model does not contain attribute 'owner'");
        assertTrue(model.get("owner") instanceof Owner, "Attribute 'owner' is not of type Owner");
    }
}
